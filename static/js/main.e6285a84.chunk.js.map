{"version":3,"sources":["Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","redux/contacts/contactsActions.jsx","redux/contacts/contactsSelectors.jsx","Components/Contacts/Contacts.jsx","Components/Filter/Filter.jsx","Components/Form/Form.jsx","Components/Section/Section.jsx","Components/App.js","redux/contacts/contactsReducer.jsx","redux/store.jsx","index.js","Components/Form/Form.module.css"],"names":["module","exports","addToPhonebook","createAction","deleteFromPhonebook","filterContacts","getContacts","state","contacts","items","getFilter","filter","Contacts","dispatch","useDispatch","useSelector","filterName","contact","name","toLowerCase","includes","map","option","lendth","className","s","number","deleteBtn","id","type","onClick","Filter","input","value","onChange","e","currentTarget","Form","useState","setName","setNumber","useEffect","localStorage","setItem","JSON","stringify","form","onSubmit","preventDefault","formState","newContact","nanoid","some","alert","pattern","title","required","submitBtn","Section","children","App","contactsItemsReducer","createReducer","payload","contactFilterReducer","_","contactsReducer","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e6285a84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contacts_contact__1JulL\",\"deleteBtn\":\"Contacts_deleteBtn__1mtiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2mwr-\",\"input\":\"Filter_input__352gy\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addToPhonebook = createAction(\"contacts/addToPhonebook\");\r\n\r\nconst deleteFromPhonebook = createAction(\"contacts/deleteFromPhonebook\");\r\n\r\nconst filterContacts = createAction(\"contacts/filterContacts\");\r\n\r\nexport { addToPhonebook, deleteFromPhonebook, filterContacts };","const getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nexport { getContacts, getFilter };","import React from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { deleteFromPhonebook } from \"../../redux/contacts/contactsActions\";\r\nimport { getContacts, getFilter } from \"../../redux/contacts/contactsSelectors\";\r\nimport s from './Contacts.module.css'\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n  const contacts = useSelector(getContacts);\r\n  const filterName = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n  return (\r\n    <ul>\r\n      {filterName.map((option) => {\r\n        return (\r\n          filterName.lendth !== 0 && (\r\n            <li className={s.contact} key={option.id}>\r\n              {option.name }:{option.number}\r\n              \r\n              <button className={s.deleteBtn} name={option.id} type=\"button\" onClick={() => dispatch(deleteFromPhonebook(option.id))}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          )\r\n        );\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/contacts/contactsActions\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\nimport s from './Filter.module.css'\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n  return (\r\n    <label className={s.filter} >\r\n      Find\r\n      <input\r\n        className={s.input}\r\n        value={filter}\r\n        type=\"text\"\r\n        onChange={(e) => dispatch(filterContacts(e.currentTarget.value))}\r\n        name=\"filter\"\r\n      ></input>\r\n    </label>\r\n  )\r\n}\r\n\r\n\r\nexport default Filter\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { nanoid } from 'nanoid'\r\nimport { addToPhonebook } from \"../../redux/contacts/contactsActions\";\r\nimport { getContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport s from './Form.module.css'\r\n\r\nexport default function Form() {\r\n    const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n   const [name, setName] = useState(\"\");\r\n   const [number, setNumber] = useState(\"\");\r\n   \r\n   const reset = () => {\r\n     setName(\"\");\r\n     setNumber(\"\");\r\n  };\r\n   \r\n   const isNameExist = (formState) => {\r\n    const some = contacts.some(\r\n      (contact) => contact.name.toLowerCase() === formState.toLowerCase()\r\n    );\r\n    return some;\r\n  };\r\n  const onChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    name === \"name\" && setName(value);\r\n    name === \"number\" && setNumber(value);\r\n  };\r\n  useEffect(() => {\r\n    if (contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }, [contacts]);\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      name,\r\n      number,\r\n      id: nanoid(),\r\n    };\r\n\r\n    if (isNameExist(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    }\r\n    dispatch(addToPhonebook(newContact));\r\n    reset();\r\n  };\r\n\r\n  \r\n    return (\r\n      <form className={s.form} onSubmit={onFormSubmit}>\r\n         <label>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            value={name}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            value={number}\r\n            onChange={onChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n         <button className={s.submitBtn} type=\"submit\">Add contact</button>\r\n      </form>\r\n    )\r\n  }\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Section\r\n","import Contacts from \"./Contacts/Contacts\";\nimport Filter from \"./Filter/Filter\";\nimport Form from \"./Form/Form\";\nimport Section from \"./Section/Section\";\n\nexport default function App() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title={\"Contacts\"}>\n        <Filter />\n        <Contacts />\n      </Section>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addToPhonebook,\r\n  deleteFromPhonebook,\r\n  filterContacts,\r\n} from \"./contactsActions\";\r\n\r\nconst contactsItemsReducer = createReducer([], {\r\n  [addToPhonebook]: (state, { payload }) => [...state, payload],\r\n  [deleteFromPhonebook]: (state, { payload }) =>\r\n    state.filter((contact) => payload !== contact.id),\r\n});\r\n\r\nconst contactFilterReducer = createReducer(\"\", {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: contactsItemsReducer,\r\n  filter: contactFilterReducer,\r\n});\r\n\r\nexport default contactsReducer;","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: \"filter\",\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(persistConfig, contactsReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport { persistor, store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__13Sk5\",\"input\":\"Form_input__2XAqk\",\"submitBtn\":\"Form_submitBtn__iss9y\"};"],"sourceRoot":""}