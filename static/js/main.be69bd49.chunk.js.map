{"version":3,"sources":["Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","service/Api.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","Components/Contacts/Contacts.jsx","redux/contacts/contactsSlice.js","Components/Filter/Filter.jsx","Components/Form/Form.jsx","Components/Section/Section.jsx","Components/App.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","BASE_URL","fetchContacts","path","a","options","fetch","res","ok","json","Promise","reject","Error","statusText","endpoint","getContacts","createAsyncThunk","addContact","newContact","newConrtact","finalOptions","method","body","JSON","stringify","headers","api","deleteContact","id","getAllContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","name","toLowerCase","includes","Contacts","dispatch","useDispatch","filterContacts","useSelector","useEffect","map","option","lendth","className","s","contact","phone","deleteBtn","type","onClick","contactsSlice","createSlice","initialState","reducers","action","console","log","payload","extraReducers","builder","addCase","fulfilled","index","findIndex","splice","actions","Filter","input","value","onChange","e","currentTarget","Form","useState","setName","setPhone","form","onSubmit","preventDefault","formState","some","alert","pattern","title","required","submitBtn","Section","children","App","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be69bd49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contacts_contact__2istQ\",\"deleteBtn\":\"Contacts_deleteBtn__2-POv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2BeDJ\",\"input\":\"Filter_input__3wmmx\"};","const BASE_URL = \"https://61db57ff4593510017aff878.mockapi.io\";\n\nconst fetchContacts = async (path, options = {}) => {\n  const res = await fetch(`${BASE_URL}/${path}`, options);\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst getContacts = (endpoint, options) => fetchContacts(endpoint, options);\n\nconst addContact = (endpoint, newConrtact, options = {}) => {\n  const finalOptions = {\n    method: \"POST\",\n    body: JSON.stringify(newConrtact),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n    ...options,\n  };\n  return fetchContacts(endpoint, finalOptions);\n};\n\nconst deleteContact = (endpoint, id, options) =>\n  fetchContacts(`${endpoint}/${id}`, { method: \"DELETE\", ...options });\n\nexport { getContacts, addContact, deleteContact };\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as api from \"../../service/Api\";\n\nconst endpoint = \"contacts\";\n\nexport const getContacts = createAsyncThunk(\"contacts/getContactsStatus\", () =>\n  api.getContacts(endpoint)\n);\n\nexport const addContact = createAsyncThunk(\n  \"contact/addContactStatus\",\n  (newContact) => api.addContact(endpoint, newContact)\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contact/deleteContactStatus\",\n  (id) => api.deleteContact(endpoint, id)\n);\n","import { createSelector } from \"reselect\";\n\nconst getAllContacts = (state) => state.contacts.items;\nconst getFilter = (state) => state.contacts.filter;\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\nexport { getAllContacts, getFilter, getFilteredContacts };\n","import { useEffect } from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  deleteContact,\r\n  getContacts,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport s from \"./Contacts.module.css\"\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const filterContacts = useSelector(getFilteredContacts);\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n  \r\n  return (\r\n    <ul>\r\n      {filterContacts.map((option) => {\r\n        return (\r\n          filterContacts.lendth !== 0 && (\r\n            <li className={s.contact} key={option.id}>\r\n              {option.name }: {option.phone}\r\n              \r\n              <button className={s.deleteBtn} name={option.id} type=\"button\" onClick={() => dispatch(deleteContact(option.id))}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          )\r\n        );\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Contacts\r\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getContacts, addContact, deleteContact } from \"./contactsOperations\";\n\nconst initialState = {\n  items: [],\n  filter: \"\",\n};\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  reducers: {\n    filterContacts: (state, action) => {\n      console.log(\"action\", action);\n\n      return { ...state, filter: action.payload };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getContacts.fulfilled, (state, { payload }) => {\n        state.items = payload;\n      })\n      .addCase(addContact.fulfilled, (state, { payload }) => {\n        state.items = [payload, ...state.items];\n      })\n      .addCase(deleteContact.fulfilled, (state, { payload }) => {\n        const index = state.items.findIndex(\n          (contact) => contact.id === payload.id\n        );\n        state.items.splice(index, 1);\n      });\n  },\n});\n\nexport const { filterContacts } = contactsSlice.actions;\nconsole.log(\"filterContacts\", contactsSlice.actions);\nexport default contactsSlice.reducer;\n","import PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { filterContacts }  from \"../../redux/contacts/contactsSlice\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\nimport s from './Filter.module.css'\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n  console.log(\"Filter ~ filter\", filter)\r\n  return (\r\n    <label className={s.filter} >\r\n      Find\r\n      <input\r\n        className={s.input}\r\n        value={filter}\r\n        type=\"text\"\r\n        onChange={(e) => dispatch(filterContacts(e.currentTarget.value))}\r\n        name=\"filter\"\r\n      ></input>\r\n    </label>\r\n  )\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter\r\n","import {  useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\r\nimport { getAllContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport s from './Form.module.css'\r\n\r\nexport default function Form() {\r\n    const contacts = useSelector(getAllContacts);\r\n  const dispatch = useDispatch();\r\n\r\n   const [name, setName] = useState(\"\");\r\n   const [phone, setPhone] = useState(\"\");\r\n   \r\n   const reset = () => {\r\n     setName(\"\");\r\n     setPhone(\"\");\r\n  };\r\n   \r\n   const isNameExist = (formState) => {\r\n    const some = contacts.some(\r\n      (contact) => contact.name.toLowerCase() === formState.toLowerCase()\r\n    );\r\n    return some;\r\n  };\r\n  const onChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    name === \"name\" && setName(value);\r\n    name === \"phone\" && setPhone(value);\r\n  };\r\n  \r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      name,\r\n      phone,\r\n    };\r\n\r\n    if (isNameExist(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    }\r\n    dispatch(addContact(newContact));\r\n    reset();\r\n  };\r\n\r\n  \r\n    return (\r\n      <form className={s.form} onSubmit={onFormSubmit}>\r\n         <label>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            value={name}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input\r\n            className={s.input}\r\n            value={phone}\r\n            onChange={onChange}\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n         <button className={s.submitBtn} type=\"submit\">Add contact</button>\r\n      </form>\r\n    )\r\n  }\r\n\r\n","\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Section\r\n","import Contacts from \"./Contacts/Contacts\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Form from \"./Form/Form\";\r\nimport Section from \"./Section/Section\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <Form />\r\n      </Section>\r\n      <Section title={\"Contacts\"}>\r\n        <Filter />\r\n        <Contacts />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contactsSlice\";\n\n// const middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  // middleware,\n});\n\nexport { store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3xC9t\",\"input\":\"Form_input__24BTA\",\"submitBtn\":\"Form_submitBtn__2ijlc\"};"],"sourceRoot":""}